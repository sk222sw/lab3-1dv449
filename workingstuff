
			for (var i = 0; i <= messages.length - 1; i++) {
				var aDate = new Date(parseInt(messages[i].createddate.substring(6, 19), 10))
				aDate = aDate.toString();
				dateArray = aDate.split(" ");
				aDate = dateArray[3] + "." + dateArray[1] + "." + dateArray[2] + " " + dateArray[4];
				aDate = Date.parse(aDate);
				// console.log(aDate)
				messages[i].createddate = aDate;
			}

			messages.sort(function(a,b) {
				return a.createddate - b.createddate;
			})

			for (var i = 0; i <= messages.length - 1; i++) {
				var date = new Date(messages[i].createddate);
				var time = timeConverter(date);
				// console.log(time);
			}


				// var date = parseInt(messages[i].createddate.substring(6, 19), 10);
				// var formatedDate = new Date(date);
				// messages[i].createddate = formatedDate;



				##NOT WORKING
					console.log(date)
	var d = date.toString().split(" ");
	var day = d[2];
	var month = d[1];
	switch(month) {
		case "Jan":
			month = 1;
		case "Feb":
			month = 2;
		case "Mar":
			month = 3;
		case "Apr":
			month = 4;
		case "Maj":
			month = 5;
		case "Jun":
			month = 6;
		case "Jul":
			month = 7;
		case "Aug":
			month = 8;
		case "Sep":
			month = 9;
		case "Okt":
			month = 10;
		case "Nov":
			month = 11;
		case "Dec":
			month = 12;
	}
	var year = d[3];
	var time = d[4];
	var timeString = year + "-" + month + "-" + day + "T" + time;
	console.log(timeString);
	var hej = moment(timeString).unix();
	console.log(hej)

				// json.messages = messages;
			// for (var i = 0; i < messages.length; i++) {
			// 	console.log(getTimeFormatted(messages[i].createddate));
			// }
			
			// // fix the ugly date format provided by the SR Api
			// // new Date(parseInt(messages[0].createddate.substring(6, 19), 10))
			// for (var i = 0; i < messages.length; i++) {
			// 	messages[i].createddate = getTimeFormatted(messages[i].createddate);
			// 	// console.log(getTimeFormatted(messages[i].createddate));
			// }


			// json.requestDate = new Date().getTime();
			// var stringData = JSON.stringify(json);
			// CacheHandler.write(trafficMessagesCache, stringData);



function getTimeFormatted(date) {
	// console.log(date)
	var time = date.substring(6, 19)
	var timeZone = date.substring(19, 24);
	var timeUnix = time + " " + timeZone;
	// console.log(timeUnix)
	// console.log(time)
	var mom = moment.unix(time);
	// console.log(mom)

	var timeString = moment(mom).format("D MMMM HH:mm");
	var t = timeString.split(" ");
	t[1] = translateMonthName(t[1]);
	var timeString = t[0] + " " + t[1] + " " + t[2];
	return timeString;
};



	// return new Promise(function (resolve, reject) {
	// 	CacheHandler.read(trafficMessagesCache)
	// 	.then(function (cachedData) {
	// 		if (TrafficMessage.prototype.timeToMakeNewRequest(cachedData)) {
	// 			return new Promise(function (resolve, reject) {
	// 				TrafficMessage.prototype.makeRequest()
	// 				.then(function (requestData) {
	// 					resolve(requestData);
	// 				});
	// 			})
	// 			.then(function (requestData) {
	// 				return requestData;
	// 			});
	// 		} else {
	// 			return new Promise(function (resolve, reject) {
	// 				resolve(CacheHandler.read(trafficMessagesCache));
	// 			})
	// 			.then(function (cachedData) {
	// 				cachedData = JSON.parse(cachedData);
	// 				return cachedData;
	// 			});
	// 		}
	// 	})